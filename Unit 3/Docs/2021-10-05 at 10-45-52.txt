H:\Comp Sci 1\Unit 3\ComputerNim.java

import java.util.Scanner;

public class ComputerNim {
    public static void main (String args[]){
        Scanner reader = new Scanner(System.in);
        
        // Making the piles
        int pileA = 4;
        int pileB = 4;
        int pileC = 4;
        
        boolean keepPlaying = true;
        
        System.out.println("--==* Nim *==--");
        System.out.println();
        
        // Getting the player names
        System.out.print("Enter your name: ");
        String player = reader.nextLine();
        
        // Needed to find who wins, kinda pointless with this though
        int turnCounter = 0;
        
        // Game itself
        while(keepPlaying){
            
            // The Player's move
            System.out.println(player + "'s turn: \n");
            
            // Prints out the current values of the pile
            System.out.print("A: ");
            for(int i = 0; i < pileA; i++){
                System.out.print("*");
            }
            System.out.print("\nB: ");
            for(int i = 0; i < pileB; i++){
                System.out.print("*");
            }
            System.out.print("\nC: ");
            for(int i = 0; i < pileC; i++){
                System.out.print("*");
            }
            System.out.println();
            
            // Choose a pile
            String pile;
            boolean pileCheck = false;
            do{
                System.out.print("Choose a pile: ");
                pile = reader.nextLine();
                
                // the anti-cheat
                // If the pile has 0 you cannot choose it
                if(pile.equals("A") && pileA != 0){
                    pileCheck = false;
                } else if (pile.equals("B") && pileB != 0){
                    pileCheck = false;
                } else if(pile.equals("C") && pileC != 0){
                    pileCheck = false;
                } else {
                    System.out.println("Enter a valid choice\n");
                    pileCheck = true;
                }
                
                
            } while (pileCheck);    
            
            
            int take;
            boolean takeCheck;
            do{
                System.out.print("How many will you take: ");
                take = reader.nextInt();
                reader.nextLine();
                
                if( take > 4 || take < 1){
                    System.out.println("Enter a valid choice\n");
                    takeCheck = true;
                } else {
                    takeCheck = false;
                }
            } while (takeCheck);
            
            
            // taking away coins from the piles
            
            switch(pile) {
                case "A":
                    pileA -= take;        
                    break;
                case "B":
                    pileB -= take;
                    break;
                case "C":
                    pileC -= take;
                    break;
                default:
                    System.out.println("Invalid selection");
            
            }
            
            turnCounter++;
            
            // Computer's turn
            System.out.println(player + "'s turn: \n");
            
            // Prints out the current values of the pile
            System.out.print("A: ");
            for(int i = 0; i < pileA; i++){
                System.out.print("*");
            }
            System.out.print("\nB: ");
            for(int i = 0; i < pileB; i++){
                System.out.print("*");
            }
            System.out.print("\nC: ");
            for(int i = 0; i < pileC; i++){
                System.out.print("*");
            }
            System.out.println();
        
            // do a thread sleep here
            try{
                System.out.print(".");
                Thread.sleep(750);
                System.out.print(".");
                Thread.sleep(750);
                System.out.println(".");
                Thread.sleep(750);
            } catch(InterruptedException e){
                
            }
            
            // ComputerNim wants each pile to have either 4 or 0 coins left. 
            // So when the player takes frome a pile,
            // ComputerNim takes the remaining coins from the pile  
            
            int compTake = 4 - take;
            System.out.println("ComputerNim chooses pile" + pile);
            System.out.println("ComputerNim takes " + compTake + " coins from the pile\n");
            
            try{
                Thread.sleep(1000);
            } catch(InterruptedException e){
                
            }
            
            switch(pile) {
                case "A":
                    pileA -= compTake;        
                    break;
                case "B":
                    pileB -= compTake;
                    break;
                case "C":
                    pileC -= compTake;
                    break;
                default:
                    System.out.println("Error: ComputerNim broke");
            
            }
            
            
            turnCounter++;
            
            if(pileA <= 0 && pileB <= 0 && pileC <= 0){
                keepPlaying = false;
                turnCounter--;
            }      
        }        
        
        String winner;
    
        if(turnCounter % 2 == 0){
                winner = player;
            } else {
                winner = "ComputerNim";
        }
        
       System.out.println(winner + " wins the game! Well done!");
        
    }
}
